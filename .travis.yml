dist: xenial
language: minimal
git:
  depth: 5

#

_steps:
  - &node_stage
    language: node_js
    node_js: 12
    before_install:
      - export TZ=Europe/Paris
      - curl -o- -L https://yarnpkg.com/install.sh | bash
      - export PATH="$HOME/.yarn/bin:$PATH"
    install:
      - yarn --frozen-lockfile
      - node scripts/setup-env.js

_environments:
  - &github_keys
    - secure: "ix7y9J6eRWDEj/cwa5c6MgTb4+VceDR5AZLaM5oHDd/8M02LNaoPfIzKWNXXklHOYrLlHRUBJAUkiCt3IYU1qC850mnjjvTMInGiSxKQ+NWBewgmEhmhGfOCCvFBRFscIw6/yhynpDi8Yz2TMHgy+jSm0Gef6sSrDftuV6318pWdgk5dE7wWkNIb2SZvGjCPZnGFniKG29y1s2zmdiQjGZZ0ZtmWPnU2uDrWm/Z5y6oNI/JNKR895/MapyLtPReK2YlXsRqiTl29pf7YV/+sZPyp96OALFqfs3QCI1SZnYLooV4WG4syGBQ8Z1nYmL321gDH2ap/a3Dp5y3pRzQR69u0e+9YfvuVyWUIrnMCUCHbmq2FKv8rGbE+21YlkZlMwbAxbMTLi8jH9CHFQ76wlVnXRruo2jUPX9TnhSVSWvxC9OXW8Pxtp+nF+BNsjvIifX2pCZfXwrxzZtSSa54B3eOyIZp8ZnIlftMBKPIEZkbFie7AvkNDpj/dg6NcVuIYYJf7exWBadKLMPAtwx1tp3bxuAWRr80DwlwLSaLQaXVwGnuXBs5HrnoFd/KqwY+ZGNRVdCwHLJ8o6BL7li4e4d6SjqU7XfvqzpeLNrQXvM/YSrIRRK+kyd4AipjjFpGklDJvdXaxP4nGkUoB7yumrMvtTwYGzcjoS4i3ajvkElc="
  - &gitlab_keys
    - secure: "fqyWq1rNxYxVGjioq64ldruVGlFtOLiaOFWWIf2Ob3yN0SRQ2zz5yyee/NGK+U8nBLoCAK8RdUa1xDBEDBlsh+ps8Pw8OiIZxUMv1i5dNdeMDsDzOtHNfQV03fpBkba76+QEe1YYZOgawQcj9GGuDrwhO8tr/pvgZs5ibrPySTbDV06Eyi4NfxlSKzM1fyR7DpnzdMUgL5ryt6L91SY99dl8vYC/v0T4YJzn4QWgbr9LWCQImGIvPVbB5skYmtwgR/Q7Majv6yRKcV2ldMxDaF7BxqjS/fo3BaYv+p2gK3hjQS5kIdhLUqKyFTd17/xbhGJO17KzgrH5Kg6kRV4QjhIrbb6/PeFD49lyNIoAnbIQsl4iT5Pira3Nb2Pe8V83sTOhW3XvULn+TcaBnwC17heARNVJ5XHCloTxj8pKY4kqci5+rdn3wQAJ4gWpOqVqdtWX91m04SPQZCef6G3HEGN9QEFS1kDA+ZicGIRxW7GvxlyY9Yhi+g4Zq0nwPvjKn9f6UTgoDZv2h42kWN8jOue+6IeXb+SZ34jj5WzzcklZTvUNjHG4s2VVrGnq07tKdfni3If1lN/W7M8JL9oYFW4m8R33YaQNrdgCWujrlb2INKtahwUD7LmsvtMH/TSAgx5WI/qXryPW8m5a1FSj8naprDEI7O834QS0SJLkGyo="

#

jobs:
  include:
    - <<: *node_stage
      stage: Main
      if: NOT (env(RELEASE) OR env(PRODUCTION))
      name: Main Stage
      env:
        - ELASTICSEARCH_LOG_LEVEL=info
      before_script:
        - docker-compose up -d elasticsearch

        # Code folding and timing in Travis CI
        # from http://www.garbers.co.za/2017/11/01/code-folding-and-timing-in-travis-ci/
        - export -f travis_fold travis_nanoseconds travis_time_finish
        #
      script:
        - travis_fold start "yarn.build"
        - yarn build --stream
        - travis_fold end "yarn.build"
        #
        - travis_fold start "yarn.lint"
        - yarn lint --stream
        - travis_fold end "yarn.lint"
        #
        - travis_fold start "yarn.test"
        - yarn run -- test --stream -- --coverage
        - travis_fold end "yarn.test"
      after_success:
        - npx codecov

    - <<: *node_stage
      stage: Release
      if: env(RELEASE)
      name: Make a new release 🎉
      env:
        - *github_keys
      script: >-
        curl -X POST
        -F token=${GITLAB_TOKEN}
        -F ref=${TRAVIS_BRANCH}
        -F "variables[RELEASE]=true"
        https://gitlab.factory.social.gouv.fr/api/v4/projects/51/trigger/pipeline

    - stage: Go Prod
      if: env(PRODUCTION)
      name: A tag is going to production 🏭
      env: *gitlab_keys
      script: >-
        curl -X POST
        -F token=${GITLAB_TOKEN}
        -F ref=${TRAVIS_BRANCH}
        -F "variables[PRODUCTION]=true"
        https://gitlab.factory.social.gouv.fr/api/v4/projects/51/trigger/pipeline

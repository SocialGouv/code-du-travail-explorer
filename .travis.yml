dist: xenial
language: minimal
git:
  depth: 5

#

_steps:
  - &node_stage
    language: node_js
    node_js: 10
    before_install:
      - export TZ=Europe/Paris
      - curl -o- -L https://yarnpkg.com/install.sh | bash
      - export PATH="$HOME/.yarn/bin:$PATH"
    install:
      - yarn --frozen-lockfile

_environments:
  - &github_keys
    - secure: "ix7y9J6eRWDEj/cwa5c6MgTb4+VceDR5AZLaM5oHDd/8M02LNaoPfIzKWNXXklHOYrLlHRUBJAUkiCt3IYU1qC850mnjjvTMInGiSxKQ+NWBewgmEhmhGfOCCvFBRFscIw6/yhynpDi8Yz2TMHgy+jSm0Gef6sSrDftuV6318pWdgk5dE7wWkNIb2SZvGjCPZnGFniKG29y1s2zmdiQjGZZ0ZtmWPnU2uDrWm/Z5y6oNI/JNKR895/MapyLtPReK2YlXsRqiTl29pf7YV/+sZPyp96OALFqfs3QCI1SZnYLooV4WG4syGBQ8Z1nYmL321gDH2ap/a3Dp5y3pRzQR69u0e+9YfvuVyWUIrnMCUCHbmq2FKv8rGbE+21YlkZlMwbAxbMTLi8jH9CHFQ76wlVnXRruo2jUPX9TnhSVSWvxC9OXW8Pxtp+nF+BNsjvIifX2pCZfXwrxzZtSSa54B3eOyIZp8ZnIlftMBKPIEZkbFie7AvkNDpj/dg6NcVuIYYJf7exWBadKLMPAtwx1tp3bxuAWRr80DwlwLSaLQaXVwGnuXBs5HrnoFd/KqwY+ZGNRVdCwHLJ8o6BL7li4e4d6SjqU7XfvqzpeLNrQXvM/YSrIRRK+kyd4AipjjFpGklDJvdXaxP4nGkUoB7yumrMvtTwYGzcjoS4i3ajvkElc="
  - &gitlab_keys
    - secure: "VE4EViYOcANDVt00/0njYFCZKS1GMvnDm9joIrsHk+GeXtQaFNM2NOE9CpHNf9WDq1eszqc+BHPppZ1DxTVk6HIXcUCyksZ549W02yg89E+Hm825oA3vko1SbCHRvHCw6lZnmCQbIjnfaQJa2aH02AF/Ngtw/swXa7Yc+/pRFNF8AiNJha7xrNP0NeuIRlPfOaaExfaVya1nZ4AcubzbJU8cyLUvs8n3Dobr8YNyrr6fC0zt4TYdP5R2mKhaC3+mSto7c2yJMgq3vNiUA6+VCsVz3g9YS5z4a0E9ogVUDLOdlb5Djt39Eh3y5V00QD2+Hj9vMmL//pnmo8XtX1qGVndQhaLu+jRSWu92Quipp1Ha9jAFFEJhEc4X0X6lFxQXt5+4x/392j6Jm82nZQp2jNILU0y4769uXqIF+a7hUU24ztnei92JYN1AnTeqKXn9pGu7Mq0My26VqwEmW5A2/6VXzPzI28uiD1Gxoq+uodAR0eGT2c6QQ9FB3rfmA4ucAa9eN2dhfZmGxeSAUkC9dY5Hsakx1cpBPWc1PFfDozDKGoArc4Q5R7hkY9fpECjIvkLrOnWzrtkHrz4XEi36X/EELmsA3QqGA16tej+9iRvshr86znMrR7ycH+8FaTN08voNEjxGYC+of9YemcZdajlOk4R2Uk4CIjS85Wnhi9c="

#

jobs:
  include:
    - <<: *node_stage
      stage: Main
      if: NOT (env(RELEASE) OR env(PRODUCTION))
      name: Main Stage
      env:
        - ELASTICSEARCH_LOG_LEVEL=info
      before_script:
        - docker-compose up -d elasticsearch

        # Code folding and timing in Travis CI
        # from http://www.garbers.co.za/2017/11/01/code-folding-and-timing-in-travis-ci/
        - export -f travis_fold travis_nanoseconds travis_time_finish
        #
      script:
        - travis_fold start "yarn.build"
        - yarn build --stream
        - travis_fold end "yarn.build"
        #
        - travis_fold start "yarn.lint"
        - yarn lint --stream
        - travis_fold end "yarn.lint"
        #
        - travis_fold start "yarn.test"
        - yarn run -- test --stream -- --coverage
        - travis_fold end "yarn.test"
      after_success:
        - npx codecov

    - <<: *node_stage
      stage: Release
      if: env(RELEASE)
      name: Make a new release 🎉
      git:
        # NOTE(douglasduteil): disable git --depth
        # Try to have all the commits for the release Change Log
        # see travis-ci/travis-ci#3412
        depth: 9999999 # Over 9000 !
      env:
        - *github_keys
      before_script:
        - git checkout ${TRAVIS_BRANCH}
        - git config user.name "Social Groovy Bot"
        - git config user.email "45039513+SocialGroovyBot@users.noreply.github.com"
        - git remote set-url origin https://${GITHUB_TOKEN}@github.com/${TRAVIS_REPO_SLUG}.git
      script:
        - GH_TOKEN=${GITHUB_TOKEN} yarn lerna version ${LERNA_ARGS:=--yes}

    - stage: Go Prod
      if: env(PRODUCTION)
      name: A tag is going to production 🏭
      env: *gitlab_keys
      script: >-
        curl -X POST
        -F token=${GITLAB_TOKEN}
        -F ref=${TRAVIS_BRANCH}
        -F "variables[PRODUCTION]=true"
        https://gitlab.factory.social.gouv.fr/api/v4/projects/51/trigger/pipeline

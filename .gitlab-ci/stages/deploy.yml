.deploy_stage:
  dependencies: []
  services:
    - docker:dind
  variables: &deploy_stage_variables
    IMAGE_TAG: ${CI_COMMIT_SHA}
    REGISTRY: ${CI_REGISTRY_IMAGE}

.prod_stage:
  environment:
    name: prod
  only:
    variables:
      - $PRODUCTION

.dev_stage:
  environment:
    name: fabrique-dev
  except:
    variables:
      # Don't run when deploying in production an existing image
      - $PRODUCTION
      # Don't register a base image for release commit
      # that only bump version / udpate changelog
      - $CI_COMMIT_MESSAGE =~ /^chore(release):*/

.deploy_api_stage:
  extends:
    - .base_deploy_hpa_chart_stage
    - .deploy_stage
  stage: "Deploy Data API"
  variables:
    <<: *deploy_stage_variables
    CONTEXT: api
    PORT: 8000
    VALUES_FILE: ./.k8s/api.values.yml
    ENABLE_APM: "false"
  before_script:
    - source ./.gitlab-ci/env.sh
    - HOST=${API_HOST}

Deploy @cdtn/api (dev):
  extends:
    - .deploy_api_stage
    - .dev_stage
  variables:
    HELM_RENDER_ARGS: >-
      --set autoscaling.enabled=false
      --set deployment.resources.requests.memory=256Mi
      --set deployment.resources.requests.cpu=.3m

Deploy @cdtn/api (prod):
  extends:
    - .deploy_api_stage
    - .prod_stage
  variables:
    ENABLE_APM: "true"

.deploy_data_stage:
  extends:
    - .deploy_stage
  stage: "Deploy Data API"
  image: registry.gitlab.factory.social.gouv.fr/socialgouv/docker/kubectl:0.20.0
  variables:
    <<: *deploy_stage_variables
    CONTEXT: data
    ES_PORT: ${ELASTICSEARCH_PORT}
    IMAGE_NAME: ${CI_REGISTRY_IMAGE}/data
  script:
    - source ./.gitlab-ci/env.sh
    - kubectl config set-context --current --namespace=${K8S_NAMESPACE}
    #
    - kubectl delete job ${CONTEXT} || true
    - cat ./.k8s/data.job.yml | envsubst | kubectl apply -f -

Create Elasticsearch Index (dev):
  extends:
    - .deploy_data_stage
    - .dev_stage

Create Elasticsearch Index (prod):
  extends:
    - .deploy_data_stage
    - .prod_stage

Update Elasticsearch Index:
  extends:
    - .deploy_stage
  stage: "Update ES Data"
  image: registry.gitlab.factory.social.gouv.fr/socialgouv/docker/kubectl:0.20.0
  variables:
    <<: *deploy_stage_variables
    CONTEXT: data
    ES_PORT: ${ELASTICSEARCH_PORT}
    IMAGE_NAME: ${CI_REGISTRY_IMAGE}/data
    PRODUCTION: "true"
  script:
    - source ./.gitlab-ci/env.sh
    - kubectl config set-context --current --namespace=${K8S_NAMESPACE}
    #
    - kubectl delete job ${CONTEXT} || true
    - cat ./.k8s/data.job.yml | envsubst | kubectl apply -f -
  environment:
    name: prod
  only:
    refs:
      - master
    variables:
      - $CI_COMMIT_MESSAGE =~ /update @socialgouv data packages/

.deploy_nlp_stage:
  extends:
    - .base_deploy_nodejs_chart_stage
    - .deploy_stage
  stage: "Deploy Data API"
  variables:
    <<: *deploy_stage_variables
    PORT: ${NLP_PORT}
    VALUES_FILE: ./.k8s/nlp.values.yml
    CONTEXT: nlp
  artifacts:
    expire_in: 7 day
    paths:
      - packages/code-du-travail-nlp
  before_script:
    - source ./.gitlab-ci/env.sh
    - HOST=${NLP_HOST}
    #
    - >-
      if [[ "${BRANCH_NAME}" != "master" ]] && [[ "${HOST}" == *"master"* ]]; then
        exit "${CI_JOB_SKIP_EXIT_CODE:-0}"
      fi

Deploy @cdtn/nlp (dev):
  extends:
    - .deploy_nlp_stage
    - .dev_stage
  dependencies:
    - Register nlp image
  variables:
    HELM_RENDER_ARGS: >-
      --set deployment.resources.requests.memory=1Gi
      --set deployment.resources.requests.cpu=5m

Deploy @cdtn/nlp (prod):
  extends:
    - .deploy_nlp_stage
    - .prod_stage

#

.deploy_frontend_stage:
  extends:
    - .base_deploy_hpa_chart_stage
    - .deploy_stage
  stage: "Deploy Frontend"
  variables:
    <<: *deploy_stage_variables
    PORT: ${FRONTEND_PORT}
    CONTEXT: frontend
    VALUES_FILE: ./.k8s/frontend.values.yml

Deploy @cdtn/frontend (dev):
  extends:
    - .deploy_frontend_stage
    - .dev_stage
  variables:
    HELM_RENDER_ARGS: >-
      --set autoscaling.enabled=false
      --set deployment.resources.requests.memory=256Mi
      --set deployment.resources.requests.cpu=.1m
  before_script:
    - source ./.gitlab-ci/env.sh
    - HOST=${FRONTEND_HOST}

Deploy @cdtn/frontend (prod):
  extends:
    - .deploy_frontend_stage
    - .prod_stage

Deploy @cdtn/frontend extra ingress(prod):
  extends:
    - .base_docker_kubectl_image_stage
    - .deploy_stage
    - .prod_stage
  stage: "Deploy Frontend"
  script:
    - kubectl config set-context --current --namespace=${K8S_NAMESPACE}
    - cat ./.k8s/ingress-prod.yml | envsubst | kubectl apply -f -
  before_script:
    - source ./.gitlab-ci/env.sh

#

include:
  #
  - "https://raw.githubusercontent.com/SocialGouv/gitlab-ci-yml/v2.1.0/base_create_namespace_stage.yml"
  - "https://raw.githubusercontent.com/SocialGouv/gitlab-ci-yml/v2.1.0/base_deploy_nodejs_chart_stage.yml"
  - "https://raw.githubusercontent.com/SocialGouv/gitlab-ci-yml/v2.1.0/base_docker_helm_image_stage.yml"
  - "https://raw.githubusercontent.com/SocialGouv/gitlab-ci-yml/v2.1.0/base_docker_kubectl_image_stage.yml"
  - "https://raw.githubusercontent.com/SocialGouv/gitlab-ci-yml/v2.1.0/base_semantic_release_stage.yml"
  - "https://raw.githubusercontent.com/SocialGouv/gitlab-ci-yml/v2.1.0/register-stage.yml"

#

Create namespace:
  extends: .base_create_namespace_stage
  stage: "Post Registration"
  variables:
    # TODO @douglasduteil move the project-id in ci variable
    RANCHER_PROJECT_ID: c-gsm8d:p-v7cpb # the "default" project
  before_script:
    - source ./.gitlab-ci/env.sh
  after_script:
    - source ./.gitlab-ci/env.sh
    #
    # Use wild cart certificate
    - kubectl label namespace ${K8S_NAMESPACE} cert=wildcard || true
    #
    # Create cdtn secrets
    - envsubst < ./.k8s/secrets.yml | kubectl apply -n ${K8S_NAMESPACE} -f - || true
    #
    # Copy elasticsearch-creds
    - kubectl get secret elasticsearch-cloud-data --namespace=cdtn-secret --export -o yaml |
      kubectl apply --namespace=${K8S_NAMESPACE} -f -
    - kubectl get secret elasticsearch-cloud-api --namespace=cdtn-secret --export -o yaml |
      kubectl apply --namespace=${K8S_NAMESPACE} -f -

#

.resolve_helm_render_args: &resolve_helm_render_args |
  HELM_RENDER_ARGS="\
    --set image.tag=${IMAGE_TAG} \
    --set ingress.hosts[0].host=${HOST} \
    --set ingress.tls[0].hosts[0]=${HOST}"

  if [[ "${BRANCH_NAME}" = "master" ]]; then
    HELM_RENDER_ARGS=" \
      ${HELM_RENDER_ARGS} \
      --set ingress.annotations.certmanager\.k8s\.io/cluster-issuer=letsencrypt-prod \
      --set-string ingress.annotations.kubernetes\.io/tls-acme=true \
      --set ingress.tls[0].secretName=${PROJECT}-certificate"
  fi

#

.deploy_stage: &deploy_stage
  stage: "Deploy"
  dependencies: []
  services:
    - docker:dind
  variables: &deploy_stage_variables
    IMAGE_TAG: c55047948dfc085114962bc373121b12108a7e45
    # IMAGE_TAG: ${CI_COMMIT_SHA}
    REGISTRY: ${CI_REGISTRY_IMAGE}
  before_script:
    - source ./.gitlab-ci/env.sh
    - kubectl config set-context --current --namespace=${K8S_NAMESPACE}

.incubateur_stage: &incubateur_stage
  environment:
    name: prod
  only:
    refs:
      - triggers
    variables:
      - $PRODUCTION

#

.dev_stage: &dev_stage
  environment:
    name: fabrique-dev
  only:
    refs:
      - tags
      - branches
  except:
    variables:
      - $PRODUCTION

#
#
#

.deploy_api_stage: &deploy_api_stage
  <<: *deploy_stage
  extends: .base_deploy_nodejs_chart_stage
  variables:
    <<: *deploy_stage_variables
    CONTEXT: api
    PORT: 8000
    VALUES_FILE: ./.k8s/api.values.yml
  before_script:
    - source ./.gitlab-ci/env.sh
    - HOST=${API_HOST}
    - *resolve_helm_render_args

#

Deploy @cdtn/api (dev):
  <<: *deploy_api_stage
  <<: *dev_stage

Deploy @cdtn/api (incubateur):
  <<: *deploy_api_stage
  <<: *incubateur_stage

#
#
#

.deploy_frontend_stage: &deploy_frontend_stage
  <<: *deploy_stage
  extends: .base_deploy_nodejs_chart_stage
  variables:
    <<: *deploy_stage_variables
    PORT: ${FRONTEND_PORT}
    CONTEXT: frontend
    VALUES_FILE: ./.k8s/frontend.values.yml
  before_script:
    - source ./.gitlab-ci/env.sh
    - HOST=${FRONTEND_HOST}
    - *resolve_helm_render_args

#

Deploy @cdtn/frontend (dev):
  <<: *deploy_frontend_stage
  <<: *dev_stage

Deploy @cdtn/frontend (incubateur):
  <<: *deploy_frontend_stage
  <<: *incubateur_stage

#
#
#

.deploy-data: &deploy_data
  <<: *deploy_stage
  extends: .base_docker_kube_image_stage
  variables:
    <<: *deploy_stage_variables
    CONTEXT: data
    ES_PORT: ${ELASTICSEARCH_PORT}
    IMAGE_NAME: ${CI_REGISTRY_IMAGE}/data
  script:
    - kubectl delete job ${CONTEXT} || true
    #
    - envsubst < ./.k8s/data.job.yml > ./job.yml
    - kubectl apply -f ./job.yml || true

#

Create Elasticsearch Index (dev):
  <<: *deploy_data
  <<: *dev_stage

Create Elasticsearch Index (incubateur):
  <<: *deploy_data
  <<: *incubateur_stage

#
#
#

.deploy_nlp_stage: &deploy_nlp_stage
  <<: *deploy_stage
  extends: .base_deploy_nodejs_chart_stage
  variables:
    <<: *deploy_stage_variables
    PORT: ${NLP_PORT}
    CONTEXT: nlp
    VALUES_FILE: ./.k8s/nlp.values.yml
  before_script:
    - source ./.gitlab-ci/env.sh
    - HOST=${NLP_HOST}
    - *resolve_helm_render_args

#

Deploy @cdtn/nlp (dev):
  <<: *deploy_nlp_stage
  <<: *dev_stage

Deploy @cdtn/nlp (incubateur):
  <<: *deploy_nlp_stage
  <<: *incubateur_stage

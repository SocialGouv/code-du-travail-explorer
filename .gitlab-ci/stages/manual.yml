#
#
#

Release:
  stage: .post
  image: node:14.16-alpine3.13
  dependencies: []
  when: manual
  variables:
    LERNA_ARGS: --force-publish --yes --conventional-graduate
  except:
    refs:
      # Don't tag tags
      - tags
    variables:
      # Don't run when deploying in production an existing image
      - $PRODUCTION
      # Don't run when updating Elasticloud data
      - $UPDATE_ES_INDEX
  before_script:
    - npm config set access public
    - npm config set //registry.npmjs.org/:_authToken ${NPM_TOKEN}
    - apk add --no-cache git=~2
    - git checkout ${CI_COMMIT_REF_SLUG}
    - git config user.name "${CI_GIT_AUTHOR_NAME}"
    - git config user.email "${CI_GIT_AUTHOR_EMAIL}"
    - git remote set-url origin https://${GITHUB_TOKEN}@github.com/${CI_PROJECT_PATH}.git
    - yarn --frozen-lockfile
  script:
    - GH_TOKEN=${GITHUB_TOKEN} yarn lerna version ${LERNA_ARGS:="--force-publish --yes"}
    - yarn lerna publish from-package --yes

#
#
#

Production:
  stage: .post
  image: curlimages/curl:7.67.0
  dependencies: []
  when: manual
  only:
    refs:
      - tags
  except:
    variables:
      # Don't run when deploying in production an existing image
      - $PRODUCTION
      # Don't run when updating Elasticloud data
      - $UPDATE_ES_INDEX
      # Don't register a base image for release commit
      # that only bump version / udpate changelog
      - $CI_COMMIT_MESSAGE =~ /^chore(release):*/
  script:
    - echo "deploy ${CI_COMMIT_REF_SLUG}"
    - curl --request POST
      --form ref="${CI_COMMIT_REF_SLUG}"
      --form token="${CI_JOB_TOKEN}"
      --form variables[PRODUCTION]="true"
      ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/trigger/pipeline

.update_elasticloud: &update_elasticloud
  stage: "Deploy"
  image: node:14.16-alpine3.13
  dependencies: []
  variables:
    ELASTICSEARCH_URL: "$ELASTICSEARCH_URL"
    ELASTICSEARCH_DATA_TOKEN: "$ELASTICSEARCH_DATA_TOKEN"
    ES_LOGS: "$ES_LOGS"
    ES_LOGS_TOKEN: "$ES_LOGS_TOKEN"
    NLP_URL: https://serving-ml.fabrique.social.gouv.fr

  cache:
    key:
      files:
        - yarn.lock
      prefix: ${CI_JOB_NAME}
    paths:
      - .cache

  artifacts:
    expire_in: 1 week
    paths:
      - node_modules

  before_script:
    - yarn config set cache-folder $CI_PROJECT_DIR/.cache/yarn
    - yarn install --frozen-lockfile --prefer-offline
    - yarn workspace @cdtn/logger build
    - yarn workspace @cdtn/ingester build
    - yarn workspace @cdt/data build
  script:
    - yarn workspace @cdt/data start

Update preprod data:
  extends:
    - .update_elasticloud
  rules:
    - if: '($CI_PIPELINE_SOURCE == "trigger" || $CI_PIPELINE_SOURCE == "web") && $UPDATE_ES_INDEX == "PREPROD"'
      when: always
    - if: $CI_PIPELINE_SOURCE == "push"
      when: never

  environment:
    name: preprod-dev2
  variables:
    ES_INDEX_PREFIX: cdtn-preprod

Update prod data:
  extends:
    - .update_elasticloud
  rules:
    - if: '($CI_PIPELINE_SOURCE == "trigger" || $CI_PIPELINE_SOURCE == "web") && $UPDATE_ES_INDEX == "PROD"'
      when: always
    - if: $CI_PIPELINE_SOURCE == "push"
      when: never

  environment:
    name: prod2
  variables:
    ES_INDEX_PREFIX: cdtn-prod

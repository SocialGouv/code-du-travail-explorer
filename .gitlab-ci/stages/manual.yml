Snyk Docker Scan:
  stage: "Finished Deployment"
  image: snyk/snyk-cli:docker
  services:
    - docker:$DOCKER_VERSION-dind
  except:
    variables:
      # Don't run when deploying in production an existing image
      - $PRODUCTION
  dependencies: []
  when: manual
  needs:
    - Register api image
    - Register frontend image
    - Register nlp image
    - Register data image
  before_script:
    - source .gitlab-ci/env.sh
  script:
    - ./scripts/snyk-docker-scan.sh

#
#
#

Release:
  stage: "Finished Deployment"
  image: node:12.14-alpine3.10
  dependencies: []
  when: manual
  variables:
    LERNA_ARGS: --force-publish --yes --conventional-prerelease
  except:
    refs:
      # Don't tag tags
      - tags
    variables:
      # Don't run when deploying in production an existing image
      - $PRODUCTION
  before_script:
    - apk add --no-cache git=~2
    - git checkout ${CI_COMMIT_REF_NAME}
    - git config user.name "${CI_GIT_AUTHOR_NAME}"
    - git config user.email "${CI_GIT_AUTHOR_EMAIL}"
    - git remote set-url origin https://${GITHUB_TOKEN}@github.com/${CI_PROJECT_PATH}.git
    - yarn --frozen-lockfile
  script:
    - GH_TOKEN=${GITHUB_TOKEN} yarn lerna version ${LERNA_ARGS:="--force-publish --yes"}

#
#
#

Production:
  stage: "Finished Deployment"
  image: curlimages/curl:7.67.0
  dependencies: []
  when: manual
  only:
    refs:
      - tags
  except:
    variables:
      # Don't run when deploying in production an existing image
      - $PRODUCTION
      # Don't register a base image for release commit
      # that only bump version / udpate changelog
      - $CI_COMMIT_MESSAGE =~ /^chore(release):*/
  script:
    - curl --request POST
      --form ref="${CI_COMMIT_REF_NAME}"
      --form token="${CI_JOB_TOKEN}"
      --form variables[PRODUCTION]="true"
      ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/trigger/pipeline

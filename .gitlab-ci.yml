# ---
# include:
#   - project: SocialGouv/gitlab-ci-yml
#     file: /base_register_stage.yml
#     ref: v9.1.1
#   - project: SocialGouv/gitlab-ci-yml
#     file: /base_docker_helm_image_stage.yml
#     ref: v9.1.1
#   - project: SocialGouv/gitlab-ci-yml
#     file: /base_docker_kubectl_image_stage.yml
#     ref: v9.1.1
#   #
#   - /.gitlab-ci/variables.yml
#   - /.gitlab-ci/stages/quality.yml
#   - /.gitlab-ci/stages/register.yml
#   - /.gitlab-ci/stages/manual.yml
#   - /.gitlab-ci/stages/scan.yml
#   - /.gitlab-ci/stages/deploy.yml
#   - /.gitlab-ci/stages/notify.yml

#   - /optional/e2e/.runners/puppeteer/.gitlab-ci.yml

# stages:
#   - "Prepare"
#   - "Code Quality"
#   - "Manual Deploy"
#   - "Registration"
#   - "Post Registration"
#   - "Deploy"
#   - "Notify Finished Deployment"
#   - E2E test

Plop:
  image: curlimages/curl:7.67.0
  services:
    - name: $CI_REGISTRY_IMAGE/elasticsearch:$CI_COMMIT_REF_SLUG
      alias: elasticsearch
  variables:
    GIT_STRATEGY: none
    ELASTICSEARCH_URL: http://elasticsearch:9200
  script:
    # NOTE(douglasduteil): the elasticsearch health check must be last
    # As we block the job waiting for elasticsearch to be up.
    - |-
      echo "connecting to $CI_REGISTRY_IMAGE/elasticsearch:$CI_COMMIT_REF_SLUG";
      echo $ELASTICSEARCH_URL;
      retry=180;
      while
        ! curl "$ELASTICSEARCH_URL/_cat/health?h=status" &&
        [[ $(( retry-- )) -gt 0 ]];
      do echo "Waiting for Elasticsearch to go Green ($retry)" ; sleep 1 ; done ;
      [ "$retry" -eq "-1" ] && exit 1
    #

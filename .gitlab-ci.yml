---
include:
- '/k8s/kibana/.deploy-kibana-k8s.yml'
- '/k8s/elasticsearch/.deploy-elasticsearch-k8s.yml'
- '/k8s/apm-server/.deploy-apm-server-k8s.yml'
- '/k8s/code-du-travail-data/.deploy-code-du-travail-data-k8s.yml'
- '/k8s/code-du-travail-api/.deploy-code-du-travail-api-k8s.yml'
- '/k8s/code-du-travail-frontend/.deploy-code-du-travail-frontend-k8s.yml'

variables:
  IMAGE_INFRA_BASE_NAME: "infra/images-docker"

image: node:10-alpine

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
  - /usr/local/share/.cache

stages:
- "Install & Build"
- "Check Code quality"
- "Build & Push Docker Image"
- "Deploy EL Stack"
- "Create Code du Travail Numerique Elasticsearch Index"
- "Deploy Code du Travail Numerique"

#
#
#

#
# Install & Build
#

Install & Build:
  stage: "Install & Build"
  script:
  - yarn cache dir
  - yarn
  - yarn build
  artifacts:
    expire_in: "1 day"
    paths:
    - packages/code-du-travail-api/dist
    - packages/code-du-travail-css/docs/bundle.css
    - packages/code-du-travail-frontend/.next
    - packages/code-du-travail-ui/lib

#
#
#

#
# Check Code quality
#

Lint @cdt/api:
  stage: "Check Code quality"
  script:
  - yarn workspace @cdt/api lint

Lint @cdt/frontend:
  stage: "Check Code quality"
  script:
  - yarn workspace @cdt/frontend lint

Lint @cdt/ui:
  stage: "Check Code quality"
  script:
  - yarn workspace @cdt/ui lint

Lint @cdt/data search code:
  stage: "Check Code quality"
  image: python:3
  artifacts: # disable artifacts here...
  variables:
    PIPENV_VENV_IN_PROJECT: 1
    PIPENV_IGNORE_VIRTUALENVS: 1
  before_script:
  - cd packages/code-du-travail-data
  script:
  - pip install --upgrade pip
  - pip install pipenv==11.10.1
  - pipenv install --dev --three
  - pipenv run pylint --output-format=colorized search

#

Test @cdt/frontend:
  stage: "Check Code quality"
  script:
  - yarn workspace @cdt/frontend test --coverage
  after_script:
  - npx codecov

Test @cdt/ui:
  stage: "Check Code quality"
  script:
  - yarn workspace @cdt/ui test --coverage
  after_script:
  - npx codecov

#
#
#

#
# Build & Push Docker Image
#

Build Elasticsearch Image:
  stage: "Build & Push Docker Image"
  image: docker:latest
  variables:
    DOCKER_HOST: tcp://localhost:2375
  services:
  - docker:dind
  script:
  - cd docker/elasticsearch
  - docker login $CI_REGISTRY -u gitlab-ci-token -p $CI_JOB_TOKEN
  - docker build -t "$CI_REGISTRY_IMAGE/elasticsearch:latest" .
  - docker push "$CI_REGISTRY_IMAGE/elasticsearch:latest"

Build API Image:
  stage: "Build & Push Docker Image"
  image: docker:latest
  variables:
    DOCKER_HOST: tcp://localhost:2375
  services:
  - docker:dind
  script:
  - cd packages/code-du-travail-api
  - docker login  $CI_REGISTRY -u gitlab-ci-token -p $CI_JOB_TOKEN
  - docker build -t "$CI_REGISTRY_IMAGE/api:latest" .
  - docker push "$CI_REGISTRY_IMAGE/api:latest"

Build Frontend Image:
  stage: "Build & Push Docker Image"
  image: docker:latest
  variables:
    DOCKER_HOST: tcp://localhost:2375
  services:
  - docker:dind
  script:
  - cd packages/code-du-travail-frontend
  - docker login  $CI_REGISTRY -u gitlab-ci-token -p $CI_JOB_TOKEN
  - docker build -t "$CI_REGISTRY_IMAGE/frontend:latest" .
  - docker push "$CI_REGISTRY_IMAGE/frontend:latest"

Build Data Image:
  stage: "Build & Push Docker Image"
  image: docker:latest
  variables:
    DOCKER_HOST: tcp://localhost:2375
  services:
  - docker:dind
  script:
  - cd packages/code-du-travail-data
  - docker login  $CI_REGISTRY -u gitlab-ci-token -p $CI_JOB_TOKEN
  - docker build -t "$CI_REGISTRY_IMAGE/data:latest" .
  - docker push "$CI_REGISTRY_IMAGE/data:latest"

#
#
#

#
# Deploy EL Stack
#

Deploy Kibana:
  stage: "Deploy EL Stack"
  extends: .deploy-kibana-k8s
  variables:
    DOCKER_HOST: tcp://localhost:2375
    K8S_SERVER: $K8S_SERVER
    K8S_CLUSTER_NAME: $K8S_CLUSTER_NAME
    K8S_NAMESPACE: $K8S_NAMESPACE
    K8S_USERNAME: $K8S_USERNAME
    K8S_CONTEXT: $K8S_CONTEXT
    K8S_TOKEN: $K8S_TOKEN
  environment:
    name: ops

Deploy Elasticsearch:
  stage: "Deploy EL Stack"
  extends: .deploy-elasticsearch-k8s
  variables:
    DOCKER_HOST: tcp://localhost:2375
    K8S_SERVER: $K8S_SERVER
    K8S_CLUSTER_NAME: $K8S_CLUSTER_NAME
    K8S_NAMESPACE: $K8S_NAMESPACE
    K8S_USERNAME: $K8S_USERNAME
    K8S_CONTEXT: $K8S_CONTEXT
    K8S_TOKEN: $K8S_TOKEN
  environment:
    name: ops

Deploy APM:
  stage: "Deploy EL Stack"
  extends: .deploy-apm-server-k8s
  variables:
    DOCKER_HOST: tcp://localhost:2375
    K8S_SERVER: $K8S_SERVER
    K8S_CLUSTER_NAME: $K8S_CLUSTER_NAME
    K8S_NAMESPACE: $K8S_NAMESPACE
    K8S_USERNAME: $K8S_USERNAME
    K8S_CONTEXT: $K8S_CONTEXT
    K8S_TOKEN: $K8S_TOKEN
  environment:
    name: ops

#
#
#

#
# Create Code du Travail Numerique Elasticsearch Index
#

Index Elasticsearch:
  stage: "Create Code du Travail Numerique Elasticsearch Index"
  extends: .deploy-code-du-travail-data-k8s
  variables:
    DOCKER_HOST: tcp://localhost:2375
    K8S_SERVER: $K8S_SERVER
    K8S_CLUSTER_NAME: $K8S_CLUSTER_NAME
    K8S_NAMESPACE: $K8S_NAMESPACE
    K8S_USERNAME: $K8S_USERNAME
    K8S_CONTEXT: $K8S_CONTEXT
    K8S_TOKEN: $K8S_TOKEN
  environment:
    name: ops

#
#
#

#
# Deploy Code du Travail Numerique
#

Deploy Api:
  stage: "Deploy Code du Travail Numerique"
  extends: .deploy-code-du-travail-api-k8s
  variables:
    DOCKER_HOST: tcp://localhost:2375
    K8S_SERVER: $K8S_SERVER
    K8S_CLUSTER_NAME: $K8S_CLUSTER_NAME
    K8S_NAMESPACE: $K8S_NAMESPACE
    K8S_USERNAME: $K8S_USERNAME
    K8S_CONTEXT: $K8S_CONTEXT
    K8S_TOKEN: $K8S_TOKEN
  environment:
    name: ops

Deploy Frontend:
  stage: "Deploy Code du Travail Numerique"
  extends: .deploy-code-du-travail-frontend-k8s
  variables:
    DOCKER_HOST: tcp://localhost:2375
    K8S_SERVER: $K8S_SERVER
    K8S_CLUSTER_NAME: $K8S_CLUSTER_NAME
    K8S_NAMESPACE: $K8S_NAMESPACE
    K8S_USERNAME: $K8S_USERNAME
    K8S_CONTEXT: $K8S_CONTEXT
    K8S_TOKEN: $K8S_TOKEN
  environment:
    name: ops

#
#
#

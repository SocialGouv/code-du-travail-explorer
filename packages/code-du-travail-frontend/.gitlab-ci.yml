#

Install frontend:
  extends: .base_yarn_workspace_install
  variables:
    CONTEXT: code-du-travail-frontend
  before_script:
    # Remove unnecessary packages
    - find packages -maxdepth 1 -type d
      -not -name ${CONTEXT}
      -not -name code-du-travail-data
      -not -name react-ui
      -not -name react-fiche-service-public
      -not -name sources | tail -n +2 | xargs rm -rf
    #
    # Remove dependencies of necessary packages
    - find packages -maxdepth 1 -type d
          -name react-ui
      -o  -name sources
      -o  -name react-fiche-service-public | tail -n +2 | xargs -I {} sh -c
      "{ rm {}/package.json; jq 'del(.dependencies) | del(.devDependencies)' > {}/package.json; } < {}/package.json"
    #
    # Remove dependencies of necessary packages (part 2)
    - find packages/code-du-travail-data/dataset -maxdepth 1 -type d
      -not -name datafiller
      -not -name preavis-demission
      -not -name preavis-licenciement
      -not -name prime-precarite
      -not -name tools | tail -n +2 | xargs rm -rf

  script:
    - source .gitlab-ci/f1_scripts.sh
    #
    - checking_cache "${CI_COMMIT_REF_SLUG}/${CONTEXT}-node_modules.tar.gz" ||
      (echo "" && checking_cache ${CI_DEFAULT_BRANCH}/${CONTEXT}-node_modules.tar.gz) ||
      true
    #
    - tar cf - packages/${CONTEXT}/package.json yarn.lock | md5sum > PACKAGE_SHA
    - echo "last sha $(cat SHA)"
    - echo "current sha $(cat PACKAGE_SHA)"
    - cmp PACKAGE_SHA SHA
    - >-
      if cmp -s PACKAGE_SHA SHA ; then
        echo "No changes detected. Using cache ${PACKAGE_SHA}!"
      else
        echo "Changes detected."
        rm -rf node_modules packages/${CONTEXT}/node_modules
        mv PACKAGE_SHA SHA
        echo "new sha $(cat SHA)"
      fi
    #
    # NOTE(dougladuteil): remove all monorepo dependencies
    # As we only install one package, we do not need the cross packages dependencies
    # like lerna or husky...
    - "{
        rm package.json;
        jq 'del(.dependencies) | del(.devDependencies)' > package.json;
      } < package.json"
    #
    #
    - checking_cache "${CI_COMMIT_REF_SLUG}/${CONTEXT}-yarn.tar.gz" ||
      (echo "" && checking_cache ${CI_DEFAULT_BRANCH}/${CONTEXT}-yarn.tar.gz) ||
      true
    #
    - yarn config set cache-folder $CI_PROJECT_DIR/.yarn
    - yarn --frozen-lockfile
    #
    - creating_cache ${CONTEXT}-yarn.tar.gz .yarn || true
    - creating_cache ${CONTEXT}-node_modules.tar.gz SHA node_modules packages/${CONTEXT}/node_modules || true
  artifacts:
    expire_in: 30 mins
    paths:
      - node_modules
      - packages/${CONTEXT}/node_modules

#

.Lint @cdtn/frontend:
  extends: .quality_stage
  stage: "Build"
  dependencies:
    - Build @socialgouv/react-fiche-service-public
    - Build @socialgouv/react-ui
    - Install frontend
  needs:
    - Build @socialgouv/react-fiche-service-public
    - Build @socialgouv/react-ui
    - Install frontend
  image: node:12-alpine
  variables:
    CONTEXT: code-du-travail-frontend
  script:
    - yarn workspace @cdt/frontend lint

#

.Test @cdtn/frontend:
  extends: .quality_stage
  stage: "Build"
  dependencies:
    - Build @socialgouv/react-fiche-service-public
    - Build @socialgouv/react-ui
    - Install frontend
  needs:
    - Build @socialgouv/react-fiche-service-public
    - Build @socialgouv/react-ui
    - Install frontend
  image: node:12-alpine
  variables:
    CONTEXT: code-du-travail-frontend
  script:
    - yarn workspace @cdt/frontend test --coverage

.Test @cdtn/frontend SDR data:
  extends: .quality_stage
  image: alpine:3.11
  allow_failure: true
  before_script:
    - apk add --no-cache jq=~1
  script:
    - jq ".[].url"
        ./packages/code-du-travail-frontend/src/data/services-de-renseignement.json |
        xargs -n 1 wget --spider

#

.Build @cdt/frontend:
  extends: .quality_stage
  stage: "Build"
  dependencies:
    - Build @socialgouv/react-fiche-service-public
    - Build @socialgouv/react-ui
    - Build @cdt/data
    - Install frontend
  needs:
    - Build @socialgouv/react-fiche-service-public
    - Build @socialgouv/react-ui
    - Build @cdt/data
    - Install frontend
  variables:
    CONTEXT: frontend
    CWD: packages/code-du-travail-frontend
    DUMP_PATH: ../../code-du-travail-data/dist/dump.data.json
  image: node:12-alpine
  script:
    - yarn workspace @cdt/frontend build
    - yarn workspace @cdt/frontend generate-sitemap
  after_script:
    - >-
      mkdir -p ${CWD}/node_modules/@socialgouv &&
      mv ./packages/react-ui ${CWD}/node_modules/@socialgouv/react-ui
    - >-
      mkdir -p ${CWD}/node_modules/@socialgouv &&
      mv ./packages/react-fiche-service-public ${CWD}/node_modules/@socialgouv/react-fiche-service-public
  artifacts:
    expire_in: 30 mins
    paths:
      - ${CWD}/.next
      - ${CWD}/node_modules

#

.Register frontend image:
  extends:
    - .base_register_stage
    - .register_stage
  dependencies:
    - Build @cdt/frontend
  needs:
    - Build @cdt/frontend
    - Build @socialgouv/react-fiche-service-public
    - Build @socialgouv/react-ui
    - Install frontend
  before_script:
    - apk add jq=~1

    # NOTE(douglasduteil): remove `.next/cache` folder
    # We do not need the cache folder when building the production image
    - rm -rf packages/code-du-travail-frontend/.next/cache

    # Remove workspace dependencies to allow --production installation
    - >-
      jq 'del( .dependencies[ "@cdt/data", "@cdt/data...datafiller", "@cdt/data...preavis-demission", "@cdt/data...preavis-licenciement", "@cdt/data...prime-precarite", "@cdt/data...tools", "@cdt/sources", "@socialgouv/react-fiche-service-public", "@socialgouv/react-ui" ])' packages/code-du-travail-frontend/package.json > package.json.tmp
    - mv package.json.tmp packages/code-du-travail-frontend/package.json

    - cp yarn.lock packages/code-du-travail-frontend/yarn.lock
    #
    - ls -al packages/code-du-travail-frontend/node_modules
    - ls -al packages/code-du-travail-frontend/node_modules/@socialgouv
  variables:
    CONTEXT: packages/code-du-travail-frontend
    IMAGE_NAME: $CI_REGISTRY_IMAGE/frontend

#

.deploy_frontend_stage:
  extends:
    - .base_deploy_hpa_chart_stage
    - .deploy_stage
    - .dev_stage
  variables:
    PORT: ${FRONTEND_PORT}
    CONTEXT: frontend
    VALUES_FILE: ./.k8s/frontend.values.yml
  before_script:
    - source ./.gitlab-ci/env.sh
    - HOST=${FRONTEND_HOST}

.Deploy @cdtn/frontend (dev):
  extends:
    - .deploy_frontend_stage
    - .dev_stage
